# 设置 tmux 会话名为窗口标题
set -g set-titles on
set -g set-titles-string '#S'

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
#bind-key v split-window -h -p 50 -c "#{pane_current_path}"
#bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
#bind-key s split-window -p 50 -c "#{pane_current_path}"
#bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# quick navigating between windows
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-h previous-window
bind -n M-l next-window

# vi like select and past
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# open a man page in new pane or window
bind m command-prompt -p "man page:" "split-window -h 'exec man %%'"
bind M command-prompt -p "Man page:" "new-window -n 'man %1' 'exec man %1'"

# No escape time for vi mode
set -sg escape-time 0

# Bigger history
set -g history-limit 20000


# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# open new window in current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# 开启鼠标模式，可以使用鼠标选择窗格和调整窗格大小
set -g mouse on
# 使得鼠标选中自动复制到剪贴板
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'pbcopy'
bind -T copy-mode-vi MouseDragEnd1Pane send -X


# 会话和窗口的命名
set -g automatic-rename on # 自动重命名窗口
#set-option -g allow-rename off # 防止自动重命名

# 改进的复制模式和滚动支持
# 使用 Vi 模式的复制&粘贴（如果你已经启用了 Vi 模式）
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi r send -X rectangle-toggle

# 支持 pbcopy 和 pbpaste（对 macOS 用户特别有用）
# 如果你在 Linux 上，可能需要安装 xclip 或 xsel 并修改下面的命令
if-shell 'test -x /usr/bin/pbcopy' 'bind C-c run "tmux save-buffer - | pbcopy"'
if-shell 'test -x /usr/bin/pbpaste' 'bind C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"'

# 优化 SSH 会话
# 保持 SSH 会话活跃
set -g @ssh_keep_alive 1

# TPM (tmux plugin manager) configuration
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-capture-pane-contents 'on'
# conda or some other env not same, dot not resume vim
# for vim
#set -g @resurrect-strategy-vim 'session'
# for neovim
#set -g @resurrect-strategy-nvim 'session'

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/double/cyan'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# 为了让 tmux 和 Powerlevel10k 配合更好，确保外部命令可以在 tmux 中正确运行
# if-shell "command -v zsh > /dev/null" "set -g default-command 'exec zsh -l'" # will cause rvm error
if-shell "command -v reattach-to-user-namespace > /dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL || $SHELL'"

set -s set-clipboard on